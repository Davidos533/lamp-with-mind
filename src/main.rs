#![no_std]
#![no_main]

use defmt_rtt as _;
use embassy_executor::Spawner;
use embassy_stm32::{
    bind_interrupts,
    gpio::{Input, Level, Output, OutputType, Pull, Speed},
    i2c,
    peripherals::{self, TIM2},
    time::{hz, khz, Hertz},
    timer::simple_pwm::{PwmPin, SimplePwm},
};
use embassy_time::{Duration, Instant, Timer};
use embedded_graphics::{
    image::Image,
    mono_font::{ascii::FONT_10X20, MonoTextStyleBuilder},
    pixelcolor::{BinaryColor, Rgb565},
    prelude::{DrawTargetExt, Point},
    text::{Baseline, Text},
};
use heapless::String;
use panic_probe as _;
use ssd1306::{prelude::*, I2CDisplayInterface, Ssd1306Async};
use tinybmp::Bmp;

use {defmt_rtt as _, panic_probe as _};

use defmt_rtt as _;
use embedded_graphics::Drawable;
use panic_probe as _;
bind_interrupts!(struct Irqs {
    I2C1_EV => i2c::EventInterruptHandler<peripherals::I2C1>;
    I2C1_ER => i2c::ErrorInterruptHandler<peripherals::I2C1>;
});
use core::fmt::Write; // for write! macro

const FREQUENCY: u64 = 15_000;
const PERIOD: u64 = 1_000_000 / FREQUENCY;
const REMANING_SHOW_TIME: u64 = 5;
const INITIAL_SPEAKER_FREQUENCY: u32 = 1;
const LIGHT_DURATION: u64 = 300;
const DISPLAY_FREQUENCY: u32 = 400;
const LOAD_SOUND_DIVIDEND: u64 = 100;
const LOADING_MARGIN: i32 = 16;
const LOADING_STEP_MULTIPLIER: i32 = 12;
const DISPLAY_WIDTH: i32 = 128;
const LOADING_DELAY: u64 = 3000;
const LOADING_LED_BLINKING_DELAY: u64 = 25;
const ZERO_POS: i32 = 0;
const INITIAL_GREETING: usize = 0;
const SECOND_GREETING: usize = 1;
const CHANGE_DURATION_DELAY: u64 = 250;
const DURATION_DELAY_UPPER_BOUND: u64 = 600;
const DURATION_DELAY_LOWER_BOUND: u64 = 60;
const CHANGE_DELAY_SOUND_FX: u64 = 10;
const SECS_IN_MINS: u64 = 60;
const SPEAKER_FREQUENCY: u32 = 100;

#[no_mangle]
#[cfg_attr(target_os = "none", link_section = ".HardFault.user")]
unsafe extern "C" fn HardFault() {
    cortex_m::peripheral::SCB::sys_reset();
}

#[embassy_executor::main]
async fn main(_spawner: Spawner) {
    let p = embassy_stm32::init(Default::default());

    // Relay to control light
    let mut relay_pin = Output::new(p.PA2, Level::Low, Speed::VeryHigh);

    // Load-led
    let mut user_led = Output::new(p.PC13, Level::High, Speed::VeryHigh);

    // Sensor
    let move_sensor_pin = Input::new(p.PA0, Pull::Down);

    // Speaker
    let buzz_pin = PwmPin::new_ch2(p.PA1, OutputType::PushPull);
    let mut speaker_pwm = SimplePwm::new(
        p.TIM2,
        None,
        Some(buzz_pin),
        None,
        None,
        hz(INITIAL_SPEAKER_FREQUENCY),
        Default::default(),
    );

    // Button to cntrol duration
    let button = Input::new(p.PA5, Pull::Up);
    let mut end_show_new_time = Instant::now();
    let mut button_pressed_time = Instant::now();
    let mut light_duration = LIGHT_DURATION;

    // Display
    let display_sensors = embassy_stm32::i2c::I2c::new(
        p.I2C1,
        p.PB6,
        p.PB7,
        Irqs,
        p.DMA1_CH6,
        p.DMA1_CH7,
        Hertz::khz(DISPLAY_FREQUENCY),
        Default::default(),
    );

    let interface = I2CDisplayInterface::new(display_sensors);
    let mut display = Ssd1306Async::new(interface, DisplaySize128x32, DisplayRotation::Rotate0)
        .into_buffered_graphics_mode();

    display.init().await.unwrap();

    let _ = display.clear_buffer();

    // Loading
    let text_style = MonoTextStyleBuilder::new()
        .font(&FONT_10X20)
        .text_color(BinaryColor::On)
        .build();

    Text::with_baseline("Loading...", Point::zero(), text_style, Baseline::Top)
        .draw(&mut display)
        .unwrap();

    let _ = display.flush().await;

    for i in (1..10).rev() {
        play_sound(&mut speaker_pwm, LOAD_SOUND_DIVIDEND / i).await;

        Text::with_baseline(
            "#",
            Point::new(
                DISPLAY_WIDTH - (((i as i32) + 2) * LOADING_STEP_MULTIPLIER),
                LOADING_MARGIN,
            ),
            text_style,
            Baseline::Top,
        )
        .draw(&mut display)
        .unwrap();

        let _ = display.flush().await;

        Timer::after_millis(LOADING_DELAY).await;
    }

    for _ in 0..10 {
        user_led.set_low();
        Timer::after_millis(LOADING_LED_BLINKING_DELAY).await;
        user_led.set_high();
        Timer::after_millis(LOADING_LED_BLINKING_DELAY).await;
    }

    let greeting_1 = Bmp::<Rgb565>::from_slice(include_bytes!("../res/Guten Tag.bmp")).unwrap();
    let greeting_2 = Bmp::<Rgb565>::from_slice(include_bytes!("../res/こんにちは.bmp")).unwrap();

    let greetings_images = [
        Image::new(&greeting_1, Point::new(ZERO_POS, ZERO_POS)),
        Image::new(&greeting_2, Point::new(ZERO_POS, ZERO_POS)),
    ];

    let mut off_time = Instant::now();
    let mut start_off_time = Instant::now();

    let mut is_enabled = false;

    let _ = display.clear_buffer();

    Text::with_baseline(
        "I am watching for you)",
        Point::zero(),
        text_style,
        Baseline::Top,
    )
    .draw(&mut display)
    .unwrap();

    let _ = display.flush().await;

    let mut current_greeting = INITIAL_GREETING;

    loop {
        let now = Instant::now();

        // Display change duration message
        if now
            > button_pressed_time
                .checked_add(Duration::from_millis(CHANGE_DURATION_DELAY))
                .unwrap()
            && button.is_low()
        {
            end_show_new_time = now
                .checked_add(Duration::from_secs(REMANING_SHOW_TIME))
                .unwrap();

            button_pressed_time = now;

            if light_duration >= DURATION_DELAY_UPPER_BOUND {
                light_duration = DURATION_DELAY_LOWER_BOUND;
            } else {
                light_duration += DURATION_DELAY_LOWER_BOUND;
            }

            play_sound(&mut speaker_pwm, CHANGE_DELAY_SOUND_FX).await;

            let _ = display.clear_buffer();

            Text::with_baseline(
                duration_to_string(light_duration / SECS_IN_MINS, false).as_str(),
                Point::zero(),
                text_style,
                Baseline::Top,
            )
            .draw(&mut display)
            .unwrap();

            let _ = display.flush().await;
        }

        let is_move = move_sensor_pin.is_high();

        // No movements detected in duration
        if is_enabled && now > off_time {
            is_enabled = false;
            relay_pin.set_low();
            let _ = display.clear_buffer();

            Text::with_baseline("I am watching", Point::zero(), text_style, Baseline::Top)
                .draw(&mut display)
                .unwrap();

            let _ = display.flush().await;
        }
        // Detected movement when already activated
        else if is_move && is_enabled {
            off_time = now
                .checked_add(Duration::from_secs(light_duration))
                .unwrap();
        }
        // Detected new movement
        else if is_move {
            is_enabled = true;
            off_time = now
                .checked_add(Duration::from_secs(light_duration))
                .unwrap();
            start_off_time = now;

            relay_pin.set_high();

            current_greeting = if current_greeting == INITIAL_GREETING {
                SECOND_GREETING
            } else {
                INITIAL_GREETING
            };

            let _ = display.clear_buffer();

            greetings_images[current_greeting]
                .draw(&mut display.color_converted())
                .unwrap();

            let _ = display.flush().await;

            let sample = match current_greeting {
                INITIAL_GREETING => GUTEN_TAG_SAMPLE.as_ref(),
                SECOND_GREETING => JAPANEESE_SAMPLE.as_ref(),
                _ => panic!("incorrect greeting id"),
            };

            speaker_pwm.play_by_samples(sample).await;
        }

        // Display remaning time to off light
        if is_enabled
            && now > start_off_time + Duration::from_secs(REMANING_SHOW_TIME)
            && now > end_show_new_time
        {
            let remaining = off_time - now;

            let _ = display.clear_buffer();
            Text::with_baseline(
                duration_to_string(remaining.as_secs(), true).as_str(),
                Point::zero(),
                text_style,
                Baseline::Top,
            )
            .draw(&mut display)
            .unwrap();

            let _ = display.flush().await;
        }
    }
}

fn duration_to_string(time: u64, is_secs: bool) -> String<32> {
    let mut buffer = String::<32>::new();

    if is_secs {
        write!(buffer, "{} sec", time).unwrap();
    } else {
        write!(buffer, "{} min", time).unwrap();
    }

    buffer
}

async fn play_sound<'d>(p: &mut SimplePwm<'d, TIM2>, divider: u64) {
    const UPPER_BOUND: u32 = 200;
    const FX_MIDDLE_POINT: u32 = 2;
    const FX_PARAMETER_1: f64 = 100f64;
    const FX_PARAMETER_2: u64 = 1000;

    for i in 0..UPPER_BOUND {
        let input = i as f64;
        let s: f64;
        if i < UPPER_BOUND / FX_MIDDLE_POINT {
            s = libm::sin(input);
        } else {
            s = libm::cos(input);
        }

        p.play_fx((s * FX_PARAMETER_1) as u8, FX_PARAMETER_2 / divider).await;
    }
}

// Extensions for play sounds
pub trait SoundedOutput {
    // play prepared sample
    async fn play_by_samples(&mut self, samples: &[i8]);

    // play some fx
    async fn play_fx(&mut self, value: u8, period: u64);
}

// Extend pwm pin for play sounds
impl<'d> SoundedOutput for SimplePwm<'d, TIM2> {
    async fn play_by_samples(&mut self, samples: &[i8]) {
        const BYTE_UPPER_BOUND_PLUSE_ONE: f32 = 128f32;
        const UBYTE_UPPER_BOUND_PLUSE_ONE: f32 = 255f32;
        const SAMPLE_MULTIPLIER: f32 = 100f32;

        self.set_frequency(khz(SPEAKER_FREQUENCY));

        let mut ch2 = self.ch2();
        ch2.enable();

        for sample in samples.iter() {
            let sample = (((*sample as f32 + BYTE_UPPER_BOUND_PLUSE_ONE) / UBYTE_UPPER_BOUND_PLUSE_ONE) * SAMPLE_MULTIPLIER) as u8;

            ch2.set_duty_cycle_percent(sample);
            Timer::after_micros(PERIOD as u64).await;
        }

        ch2.set_duty_cycle_fully_off();
        ch2.disable();
    }

    async fn play_fx(&mut self, value: u8, period: u64) {
        self.set_frequency(khz(SPEAKER_FREQUENCY));

        let mut ch2 = self.ch2();
        ch2.enable();
        ch2.set_duty_cycle_percent(value);
        Timer::after_micros(period).await;

        ch2.set_duty_cycle_fully_off();
        ch2.disable();
    }
}

const GUTEN_TAG_SAMPLE: [i8; 4284] = [
    0, 0, 0, 0, 0, -1, 0, -1, 0, 0, 0, -1, 0, -1, 0, 0, -1, 0, 0, -1, 0, -1, 0, 0, -1, 0, 0, -1, 0,
    0, 0, 0, 0, 0, 0, -1, 0, 0, -1, -1, -1, -1, 0, 0, -1, -1, 0, 0, -1, -1, 0, 0, -1, -1, 0, 0, 0,
    -1, -1, -1, 0, -1, -1, -1, -1, 0, 0, 0, -1, -1, 0, -1, -1, -1, -1, -1, 0, -1, -1, -1, 0, -1,
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, -1, 0, -1, -3, -2, -3, -3, -3, -3,
    -3, -3, -3, -3, -3, -3, -3, -2, -2, -2, 0, 1, 2, 4, 6, 7, 9, 10, 9, 10, 11, 11, 11, 11, 10, 11,
    10, 10, 11, 10, 10, 10, 9, 9, 9, 8, 7, 6, 5, 1, 0, 0, -4, -4, -5, -7, -8, -8, -10, -11, -11,
    -12, -13, -13, -14, -15, -17, -17, -18, -20, -18, -20, -20, -19, -21, -20, -20, -20, -18, -18,
    -17, -15, -15, -15, -12, -13, -11, -7, -5, -2, 4, 10, 15, 19, 18, 17, 14, 13, 12, 13, 17, 19,
    21, 23, 24, 27, 30, 32, 33, 35, 34, 35, 36, 37, 39, 40, 41, 41, 39, 39, 40, 39, 37, 36, 36, 36,
    34, 34, 36, 36, 36, 37, 38, 37, 35, 34, 32, 30, 27, 26, 25, 23, 20, 19, 16, 12, 8, 5, 0, -5,
    -8, -11, -14, -17, -19, -20, -21, -24, -26, -28, -29, -31, -31, -31, -32, -32, -32, -33, -33,
    -32, -31, -30, -30, -29, -28, -27, -26, -26, -26, -25, -25, -25, -26, -27, -27, -28, -27, -27,
    -25, -23, -22, -21, -20, -18, -17, -17, -17, -16, -16, -16, -16, -16, -15, -15, -14, -14, -14,
    -14, -14, -13, -13, -13, -13, -12, -12, -11, -11, -10, -10, -9, -8, -8, -7, -6, -6, -5, -5, -5,
    -4, -4, -4, -3, -3, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, -1, -1, -1, -1, -1, -1, -1, -1,
    -1, 0, 0, 0, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 6, 6, 5, 5, 5, 5, 4, 4, 3, 3, 3,
    3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2,
    1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 6, 5, 6, 6, 5,
    5, 4, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 7, 7, 7, 7, 6, 7, 7, 7, 6, 6, 7, 6, 2, 1, 2, 4, 4, 6,
    10, 12, 11, 12, 11, 13, 11, 10, 7, 5, 6, 4, 1, 2, 9, 9, 9, 10, 21, 18, 7, 20, 39, 11, -3, 16,
    71, 65, -59, -54, 44, 57, 4, -8, 25, 38, 33, 23, 32, 37, 13, 8, 45, 47, 3, -4, 30, 35, 5, -11,
    9, 11, -19, -23, -5, -12, -32, -28, -16, -27, -36, -25, -19, -28, -25, -10, -17, -31, -22, -8,
    -19, -34, -21, -9, -21, -30, -20, -15, -30, -32, -18, -21, -33, -31, -22, -25, -30, -26, -19,
    -25, -40, -41, -30, -32, -38, -31, -23, -14, -17, -13, -2, -8, -13, -7, -3, -9, -15, -20, -22,
    -28, -35, -41, -44, -37, -41, -49, -42, -22, -22, -27, -5, 16, 20, 24, 49, 67, 68, 79, 100,
    105, 98, 94, 88, 61, 24, -1, -33, -74, -114, -128, -128, -128, -128, -128, -128, -128, -128,
    -128, -128, -41, 36, 119, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 69,
    4, -67, -123, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -115, -2, 69, 127,
    127, 127, 127, 127, 113, 100, 89, 127, 127, 127, 127, 127, 127, 127, 113, 64, 49, 24, 11, 24,
    36, 9, -47, -88, -128, -128, -128, -128, -128, -128, -128, -128, -128, -37, 25, 116, 127, 127,
    108, 57, 26, -27, -32, 64, 127, 127, 127, 127, 127, 127, 82, 26, -1, -16, -8, 27, 38, 20, -24,
    -81, -128, -128, -128, -128, -128, -128, -128, -128, -128, -118, -43, 39, 127, 127, 127, 77,
    41, -26, -81, -4, 127, 127, 127, 127, 127, 127, 75, 3, -45, -79, -57, 14, 48, 30, -5, -48,
    -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -123, -43, 79, 127, 127, 127,
    127, 127, 66, 91, 127, 127, 127, 127, 127, 127, 127, 127, 103, 79, 125, 92, 126, 127, 97, 29,
    -44, -118, -128, -128, -128, -128, -128, -127, -125, -124, -105, -115, -105, -71, -42, 0, 44,
    87, 120, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
    127, 127, 127, 127, 127, 127, 127, 127, 115, 75, 33, -11, -45, -71, -91, -94, -116, -128, -128,
    -128, -128, -128, -128, -128, -128, -123, -97, -69, -45, -23, -5, 11, 28, 41, 51, 58, 59, 57,
    51, 41, 22, -4, -27, -46, -67, -87, -105, -120, -128, -128, -128, -128, -128, -128, -128, -128,
    -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
    -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
    -128, -128, -128, -128, -128, -128, -122, -118, -113, -110, -107, -104, -105, -108, -111, -115,
    -118, -123, -127, -127, -127, -118, -111, -109, -104, -98, -89, -80, -75, -72, -73, -73, -75,
    -74, -72, -67, -62, -57, -51, -45, -38, -31, -24, -16, -9, -2, 3, 9, 14, 17, 19, 20, 21, 21,
    22, 24, 27, 30, 33, 34, 35, 35, 36, 36, 37, 38, 40, 42, 45, 47, 51, 54, 56, 59, 62, 67, 71, 76,
    80, 84, 86, 88, 90, 92, 92, 92, 94, 93, 92, 91, 92, 100, 111, 120, 127, 127, 127, 127, 127,
    127, 127, 123, 121, 122, 127, 127, 127, 127, 127, 127, 125, 102, 90, 98, 85, 71, 70, 86, 99,
    97, 84, 71, 66, 68, 50, 30, 15, 30, 48, 26, 8, 4, 24, 25, 23, 34, 40, 45, 38, 32, 32, 25, 19,
    13, 2, -10, -20, -27, -34, -39, -40, -36, -34, -34, -34, -33, -31, -30, -28, -26, -16, -6, 6,
    16, 29, 53, 67, 76, 85, 98, 106, 102, 97, 90, 72, 38, -8, -64, -119, -128, -128, -128, -128,
    -128, -128, -128, -128, -81, -1, 70, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
    101, 14, -69, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -58, 97, 127,
    127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 118, 79, 22,
    -60, -128, -128, -128, -128, -128, -128, -128, -128, -128, -68, 127, 127, 127, 127, 127, 127,
    127, 127, 127, 127, 125, 104, 96, 95, 111, 124, 127, 127, 127, 127, 127, 84, 3, -119, -128,
    -128, -128, -128, -128, -128, -128, -128, -111, 119, 127, 127, 127, 127, 127, 127, 127, 127,
    127, 126, 100, 87, 84, 104, 125, 127, 127, 127, 127, 127, 127, 99, 17, -82, -128, -128, -128,
    -128, -128, -128, -128, -128, -128, -128, 65, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
    126, 126, 127, 127, 127, 127, 127, 127, 127, 127, 127, 91, 14, -71, -128, -128, -128, -128,
    -128, -128, -128, -128, -128, -128, -128, 0, 127, 127, 127, 127, 127, 127, 127, 127, 127, 113,
    101, 102, 115, 127, 127, 127, 127, 127, 127, 127, 127, 112, 55, -3, -62, -128, -128, -128,
    -128, -128, -128, -128, -128, -128, -128, -128, -78, 92, 127, 127, 127, 127, 127, 127, 127,
    127, 120, 96, 97, 110, 114, 127, 127, 127, 127, 127, 127, 127, 127, 127, 91, 38, -23, -82,
    -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -117, -55, 5, 64,
    110, 127, 127, 127, 127, 127, 112, 101, 104, 114, 125, 127, 127, 127, 127, 127, 127, 127, 127,
    127, 119, 102, 81, 53, 22, -6, -29, -51, -71, -86, -98, -105, -112, -121, -127, -128, -128,
    -128, -127, -120, -112, -101, -93, -84, -72, -58, -42, -23, 0, 22, 43, 61, 77, 89, 97, 103,
    107, 109, 108, 102, 94, 83, 71, 58, 46, 34, 24, 15, 7, -1, -8, -15, -22, -30, -40, -50, -59,
    -67, -74, -79, -82, -84, -85, -85, -85, -84, -82, -78, -74, -68, -61, -54, -45, -34, -25, -16,
    -8, 0, 7, 13, 18, 23, 28, 32, 36, 40, 43, 45, 47, 47, 47, 46, 44, 41, 38, 35, 31, 26, 23, 19,
    15, 10, 5, 0, -5, -10, -15, -19, -22, -25, -28, -31, -32, -33, -34, -33, -31, -28, -25, -20,
    -16, -10, -5, 1, 4, 7, 8, 11, 13, 14, 15, 15, 14, 13, 9, 8, 7, 6, 8, 7, 11, 8, 5, 6, 2, 1, -2,
    -6, -6, -10, -3, -10, -1, -6, 2, 0, 4, 6, 6, 10, 14, 17, 16, 16, 16, 21, 17, 20, 3, 15, -5, 10,
    -14, 16, -1, 35, -7, 98, 99, -23, 81, 8, 127, 51, 41, 83, 106, 127, 54, 127, 127, 97, 49, 51,
    106, 103, 96, 127, 127, 77, 62, 15, -97, -92, -87, -43, -61, -97, -74, -96, -128, -128, -128,
    -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
    -128, -128, -128, -128, -128, -128, -128, -110, -85, -19, -8, 1, 8, 7, 28, 19, 12, 15, 1, 33,
    24, 46, 96, 67, 55, 59, 66, 101, 94, 82, 99, 84, 105, 106, 127, 127, 103, 125, 95, 74, 127,
    127, 127, 127, 127, 127, 124, 127, 124, 127, 127, 108, 127, 127, 127, 127, 127, 127, 106, 83,
    125, 127, 127, 127, 119, 127, 127, 127, 127, 126, 127, 127, 117, 127, 87, 98, 101, 92, 123, 77,
    90, 76, 49, 68, 40, 57, 41, 34, 50, 55, 30, 75, 34, 47, 80, 41, 82, 50, 38, 55, 50, 54, 63, 25,
    61, 58, 77, 51, 14, 44, 12, 35, -12, -26, -5, -25, -16, -59, -79, -50, -73, -37, -57, -74, -28,
    -42, 2, 2, -4, 58, 39, 53, 117, 78, 100, 77, 78, 127, 98, 94, 65, 50, 69, 8, -37, -69, -105,
    -92, -128, -128, -128, -128, -128, -128, -128, -128, -84, -68, -36, 49, 101, 113, 127, 127,
    127, 127, 127, 127, 127, 127, 106, 44, -38, -105, -125, -128, -128, -128, -128, -128, -128,
    -128, -128, -128, -128, -128, -41, -16, 12, 23, 93, 127, 127, 102, 108, 127, 127, 127, 127,
    114, 127, 127, 127, 80, -19, -59, -110, -128, -128, -128, -128, -128, -128, -128, -128, -128,
    -54, -97, -73, -94, 11, 127, 120, 91, 101, 127, 127, 127, 127, 127, 127, 127, 127, 117, 68, 39,
    -58, -128, -128, -128, -128, -128, -128, -128, -5, -51, -128, -128, -121, 46, 127, 68, 35, 60,
    92, 127, 127, 127, 127, 127, 127, 127, 127, 127, 110, 19, -90, -128, -128, -128, -128, -128,
    -128, 100, 63, -128, -128, -124, 51, 127, 127, 17, 36, 79, 85, 111, 127, 127, 127, 127, 127,
    127, 127, 127, 64, -4, -108, -128, -128, -128, -128, -128, 127, 127, -128, -128, -128, 14, 127,
    127, 67, -17, 22, 73, 95, 127, 127, 127, 127, 121, 127, 127, 127, 126, 35, -78, -128, -128,
    -128, -128, -128, 127, 127, -75, -128, -128, 33, 127, 127, 77, -37, 15, 108, 118, 127, 127,
    127, 127, 95, 127, 127, 127, 116, 28, -52, -128, -128, -128, -128, -128, 127, 127, -62, -128,
    -128, 2, 121, 127, 25, -60, 21, 89, 107, 113, 127, 127, 127, 125, 119, 127, 127, 127, 58, 17,
    -84, -128, -128, -128, -128, -54, 127, 86, -128, -128, -26, 125, 127, 24, -102, -29, 112, 127,
    72, 38, 127, 127, 127, 85, 109, 127, 127, 71, 10, -2, -102, -128, -128, -128, -128, -128, 127,
    51, -128, -128, 11, 127, 104, -57, -128, 13, 127, 127, 43, -1, 127, 127, 127, 52, 112, 127,
    127, 90, 39, 36, 11, -123, -128, -128, -128, -128, -128, -12, -6, -128, -128, 47, 127, 73, -8,
    -28, 74, 127, 116, 55, 33, 127, 127, 127, 111, 127, 127, 127, 117, 75, 86, 95, 31, -49, -128,
    -128, -128, -128, -128, -128, -43, -116, -128, -38, 127, 114, 55, 25, 32, 81, 86, 58, 30, 59,
    125, 127, 125, 94, 127, 127, 127, 116, 127, 107, 60, -8, -54, -106, -128, -128, -128, -128,
    -128, -128, -68, -18, -128, -90, 127, 127, 94, 73, 50, 78, 102, 53, 20, 33, 95, 127, 127, 127,
    127, 127, 127, 123, 112, 125, 112, 60, 5, -36, -85, -128, -128, -128, -128, -128, -128, -128,
    -128, -105, -57, -102, -9, 43, 51, 73, 71, 64, 100, 92, 71, 64, 56, 88, 127, 127, 107, 127,
    127, 127, 127, 127, 127, 127, 127, 88, 29, -22, -56, -98, -128, -128, -128, -128, -128, -128,
    -128, -128, -128, -128, -120, -110, -98, -66, -40, -7, -32, -22, 23, 49, 49, 28, 78, 97, 127,
    127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 123, 93, 71, 45, 18, -26, -82, -97, -80,
    -95, -119, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -97,
    -50, -89, -38, 111, 127, 60, 22, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 103, 127,
    127, 127, 127, 127, 127, 110, 65, 44, 39, -29, -76, -40, -62, -113, -123, -118, -119, -128,
    -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -49, -98, -128, -26,
    -26, -60, 66, 48, -26, 71, 97, 115, 60, 33, 127, 127, 103, 102, 127, 127, 106, 69, 79, 127,
    127, 97, 97, 127, 127, 127, 95, 71, 45, 31, 14, -41, -76, -100, -68, -49, -128, -125, -81,
    -122, -105, -110, -128, -91, -49, -95, -98, -84, -83, -81, -95, -91, -55, -93, -104, -23, -68,
    -124, 2, 43, -17, -1, -27, 19, 92, 35, 12, 10, 24, 99, 46, -20, 40, 36, 28, 68, 24, -11, 74,
    127, 79, 46, 112, 127, 127, 114, 62, 100, 113, 65, 73, 72, 26, 40, 58, 11, 9, 2, -25, -29, -20,
    -25, -74, -105, -77, -50, -57, -110, -125, -85, -69, -76, -69, -73, -85, -51, -81, -81, -23,
    -56, -74, -21, -31, -8, -17, -44, -5, 7, -23, -19, -9, -39, -4, -11, -15, -18, 10, -51, -36,
    50, -35, -63, 104, 121, 1, 77, 71, 35, 120, 108, 18, 97, 118, 67, 73, 84, 57, 79, 74, 32, 64,
    45, 31, 33, 22, 5, 13, 11, -3, -17, -12, -24, -38, -44, -44, -47, -41, -67, -62, -65, -57, -34,
    -56, -89, -67, -50, -76, -39, -23, -56, -47, -34, -83, -7, -52, -63, -36, -71, -53, -48, -93,
    0, -63, -53, -7, -89, -36, 2, 127, -2, 45, 31, -31, 85, 93, 39, 97, 83, 47, 74, 54, 77, 60,
    107, -1, 94, 62, 35, 62, 50, 28, 40, 39, 14, 33, 4, 1, 6, 19, -33, 25, -17, -27, -4, -22, -22,
    -6, -51, -55, -20, -62, -32, -35, -66, -31, -55, -69, -31, -76, -58, -41, -69, -41, -35, -70,
    -19, -29, -35, 11, -35, -2, 9, -13, 16, 56, 34, 53, 75, 35, 76, 61, 45, 64, 58, 57, 61, 52, 55,
    51, 40, 41, 36, 31, 26, 19, 12, 11, 4, 6, -5, 0, -4, -13, -9, -15, -16, -18, -21, -21, -18,
    -21, -23, -31, -26, -29, -33, -29, -37, -32, -33, -36, -34, -33, -30, -29, -27, -27, -25, -22,
    -22, -19, -17, -18, -13, -12, -12, -8, -7, -4, 0, -1, 1, 4, 2, 5, 5, 3, 5, 2, 1, 1, -2, -3, -4,
    -5, -5, -7, -8, -8, -9, -8, -10, -10, -11, -12, -11, -13, -14, -13, -15, -14, -15, -15, -14,
    -15, -15, -17, -16, -16, -16, -16, -16, -16, -16, -15, -14, -14, -12, -11, -9, -8, -8, -7, -5,
    -5, -3, -3, -2, -1, 1, 3, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 3, 2, 4, 4, 4, 6, 5, 7, 7, 8, 8, 8, 8, 9, 9, 9, 9, 9, 10, 10,
    10, 10, 9, 9, 8, 8, 8, 7, 7, 6, 6, 6, 6, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 2, 2, 2, 1, 1,
    1, 0, 0, -1, -1, -1, -2, -2, -2, -3, -2, -2, -2, -2, -2, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1,
    -1, -1, -1, -1, -1, -1, -1, -2, -2, -2, -3, -3, -3, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5,
    -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -4, -4, -4, -4, -4, -4, -4, -3,
    -3, -2, -2, -2, -2, -1, -1, -1, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -2, -2, -2, -2, -2, -2, -2,
    -2, -2, -2, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, 0, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1,
    -1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 2, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1,
    2, 1, 2, 2, 1, 2, 2, 2, 2, 3, 3, 2, 4, 3, 2, 5, 2, 4, 2, 3, 4, 4, 3, 3, 2, 3, 1, 4, 2, 2, 3, 2,
    3, 0, 2, -1, 2, -1, 4, -3, 4, -5, 22, -31, -15, 45, 1, 14, -6, 18, 9, -4, 4, 9, 4, -1, 2, -3,
    4, -4, 2, -2, 0, 1, -2, -1, -1, -1, 1, -3, 1, -2, 0, 1, -3, 0, -3, -1, -2, -2, -1, -2, -1, -3,
    -3, -2, -4, -1, -4, -1, -2, -1, -2, -3, 1, -3, 0, 0, -1, 0, -2, 1, -1, 0, 0, -3, -1, -2, -1,
    -2, -1, 0, -1, -1, -1, 0, 0, -1, 0, -1, 0, -1, -1, 0, -2, 0, -1, 0, 0, 0, 2, 0, 1, 1, 1, 2, 2,
    3, 2, 3, 2, 3, 2, 2, 3, 3, 4, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 1, 1, 1, 1, 0, 1, 0, 1, -1, 0,
    -1, -1, 0, -2, -1, -2, -1, -2, -1, -2, -1, -1, -1, -1, -2, -2, -3, -2, -3, -3, -4, -3, -4, -4,
    -5, -5, -5, -5, -5, -6, -6, -7, -6, -8, -7, -7, -7, -6, -7, -6, -7, -6, -6, -7, -6, -7, -6, -7,
    -6, -6, -6, -5, -5, -5, -5, -4, -4, -4, -3, -3, -3, -3, -3, -4, -3, -3, -3, -3, -2, -3, -3, -3,
    -4, -3, -2, -2, -2, -2, -1, -1, -2, -2, -2, -2, -1, -1, -2, -2, -2, -2, -2, -3, -2, -2, -2, -2,
    -2, -2, -2, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1,
    0, 0, 0, 1, 0, 0, 0, 0, 0, 0, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, -1, -1, -1, -2, -2, -2, -3, -3,
    -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -3, -3, -3, -3, -3, -2, -2, -2, -1, -1, -1, -1, -1,
    0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0,
    -1, -1, -1, -1, -2, -2, -2, -3, -4, -4, -4, -5, -5, -5, -5, -5, -6, -6, -6, -5, -5, -5, -5, -5,
    -5, -4, -4, -3, -3, -3, -2, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -2, -2, -2,
    -3, -3, -3, -3, -4, -4, -4, -4, -4, -4, -5, -4, -4, -5, -4, -4, -4, -4, -4, -3, -3, -3, -3, -2,
    -2, -2, -2, -2, -2, -2, -2, -2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
    -1, -1, -1, -1, -1, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 2, 2, 2, 1, 1, 1, 0, 0, -1,
    -1, -2, -2, -3, -3, -3, -3, -3, -3, -3, -2, -2, -2, -2, -1, -1, -1, 0, 0, 0, 0, 1, 0, 0, 0, 0,
    0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 1, 1, 1, 1, 1,
    1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,
    0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
    -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, -1, -1, -1, -1,
    -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, -1, -1, -1, -2, -2, -2,
    -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, -1, -1, 0, 0, 0, 1, 1,
    1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 0, 0, -1, -1, -1, -2, -2, -3, -3, -3, -3, -3,
    -3, -3, -3, -3, -3, -3, -2, -2, -2, -2, -2, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 0, 0, -1, -1, -1, -2, -2, -3, -3, -3, -4, -4, -4, -4,
    -4, -4, -4, -3, -3, -3, -3, -3, -2, -2, -2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
    -2, -2, -2, -2, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -2, -2, -2, -2, -1, -1, -1, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -2, -2, -2, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3,
    -3, -3, -2, -2, -2, -2, -1, -1, -1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, -1, -1, -1,
    -1, -2, -2, -2, -2, -2, -2, -2, -2, -1, -1, 0, 0, 1, 1, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2,
    2, 1, 1, 1, 1, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -2, -2, -2, -2, -1, -1,
    -1, -1, -1, -1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, -1, -1, -1, -1, -2, -2, -2, -2,
    -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, -1, -1, -1, -1, -1, -1, -2,
    -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, 0, -1, 0, -1, 0, -1,
    0, -1, 0, -1, 0, -1, 0, 0, -1, 0, 0, -1, 0, -1, 0, -1, 0, -1, 0, 0, -1, 0, -1, 0, 0, -1, 0, 0,
    -1, 0, -1, 0, 0, -1, 0, -1, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, 0, -1, 0, -1, 0,
    -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, 0, -1, 0, -1, 0, -1, 0, -1, 0, 0, -1, 0, -1,
    0, -1, 0, -1, 0, -1, 0, 0,
];

const JAPANEESE_SAMPLE: [i8; 4389] = [
    0, 0, 0, 0, 0, -1, 0, -1, 0, 0, 0, -1, 0, -1, 0, 0, -1, 0, 0, -1, 0, -1, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, -1, 0, 0, -1, -1, -1, -1, -1, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1,
    0, -1, 0, -1, 0, -1, 0, -1, 0, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
    0, 0, 0, -1, 0, -1, 0, -1, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1,
    -1, -1, -1, -1, -1, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1,
    -1, -1, -1, -1, -1, -1, 0, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1,
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, -1, -1, 0, 0, 0, -1, 0, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, -1, 0, -1, -1, -1, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0,
    0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
    -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1,
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
    -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
    -1, -1, 0, 0, -1, 0, 0, -1, -1, -1, -1, -1, -1, -1, -2, -2, -2, -2, -2, -3, -3, -4, -3, -4, -3,
    -3, -3, -3, -3, -3, -3, -2, -2, -2, -2, -1, -1, -1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3,
    3, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4,
    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 3, 3, 3, 2, 2, 2, 2, 2, 3, 3, 3, 2,
    2, 1, 0, 0, -1, -1, -1, -1, -1, -1, -2, -2, -3, -3, -3, -4, -4, -5, -5, -5, -6, -6, -6, -7, -7,
    -8, -8, -8, -9, -9, -9, -9, -9, -10, -10, -10, -10, -10, -10, -10, -10, -11, -10, -10, -10,
    -10, -10, -10, -10, -10, -10, -10, -10, -9, -9, -9, -9, -8, -8, -8, -7, -7, -6, -6, -6, -5, -5,
    -5, -4, -4, -4, -3, -3, -3, -2, -2, -2, -2, -1, -1, -1, -1, -1, -1, -1, -1, -2, -3, -4, -5, -5,
    -6, -6, -5, -4, -2, -2, -1, -1, -1, -2, -2, -2, -2, -1, -1, 0, 0, 1, 2, 3, 4, 5, 5, 7, 8, 10,
    11, 12, 13, 13, 12, 12, 13, 12, 11, 10, 10, 10, 9, 8, 8, 7, 7, 6, 7, 7, 9, 15, 18, 11, 12, 20,
    52, 64, 10, -10, 35, 87, 74, 50, 83, 127, 102, 34, 44, 107, 100, 33, 16, 50, 65, 34, 4, 8, 14,
    -13, -42, -54, -57, -58, -65, -76, -83, -80, -77, -88, -100, -100, -94, -96, -104, -109, -111,
    -107, -112, -112, -107, -103, -100, -103, -101, -88, -80, -81, -85, -84, -75, -65, -58, -60,
    -61, -53, -44, -37, -29, -22, -11, -2, 4, 9, 10, 22, 32, 40, 44, 53, 69, 65, 52, 54, 68, 64,
    53, 47, 53, 54, 45, 44, 50, 55, 45, 36, 32, 28, 29, 27, 28, 29, 30, 25, 23, 28, 29, 25, 23, 26,
    34, 40, 41, 47, 54, 55, 47, 44, 54, 66, 64, 52, 46, 51, 52, 37, 22, 17, 17, 12, 4, -2, -5, -9,
    -10, -6, 3, 13, 22, 29, 37, 48, 58, 63, 69, 77, 91, 101, 92, 73, 53, 33, 3, -34, -66, -82, -86,
    -91, -102, -112, -107, -82, -31, 29, 67, 59, 38, 48, 92, 127, 127, 123, 123, 127, 127, 100, 44,
    -4, -37, -65, -102, -128, -128, -128, -128, -128, -108, 14, 107, 92, -8, -80, -46, 58, 127,
    127, 127, 127, 127, 127, 127, 60, 31, 14, -30, -105, -128, -128, -128, -128, -128, -82, 104,
    127, 75, -80, -128, -76, 48, 127, 127, 127, 127, 127, 127, 84, 50, 31, 3, -48, -124, -128,
    -128, -128, -128, -128, 67, 127, 127, -63, -128, -128, -55, 66, 127, 127, 127, 127, 98, 88,
    127, 127, 99, -10, -98, -128, -128, -128, -128, -128, 112, 127, 127, -74, -128, -128, -97, 46,
    127, 127, 127, 127, 7, 65, 127, 127, 127, 18, -84, -128, -128, -128, -128, -128, 127, 127, 127,
    -128, -128, -128, -118, 15, 127, 127, 127, 60, -38, 109, 127, 127, 127, 80, -56, -128, -128,
    -128, -128, -128, 127, 127, 127, -128, -128, -128, -128, 41, 127, 127, 127, 37, 13, 121, 127,
    127, 127, 127, -46, -128, -128, -128, -128, -128, 96, 127, 127, -30, -128, -128, -128, 37, 127,
    127, 127, 89, 62, 55, 127, 127, 127, 120, -5, -87, -128, -128, -128, -128, -128, 127, 127, 108,
    -53, -128, -128, -31, 127, 127, 127, 127, 79, 4, 127, 127, 127, 127, 127, -30, -128, -128,
    -128, -128, -128, 55, 127, 127, 117, -39, -128, -108, 127, 127, 127, 127, 127, 1, 127, 127,
    127, 127, 127, 10, -52, -128, -128, -128, -128, -128, 63, 117, 127, 127, -104, -128, 54, 58,
    127, 127, 127, 78, 127, 127, 127, 127, 127, 38, 115, -41, -128, -128, -128, -128, -128, 6, -65,
    113, 127, -72, -7, 63, -78, 83, 127, 86, 127, 127, 121, 127, 127, 111, 127, 83, 20, -7, -78,
    -128, -128, -128, -128, -128, -128, -10, 12, 60, 127, 127, 90, 120, 72, 99, 127, 127, 127, 127,
    127, 120, 77, 23, -12, -75, -128, -128, -128, -128, -128, -128, -116, -4, 78, 125, 127, 127,
    125, 117, 96, 119, 127, 127, 127, 127, 127, 119, 90, 67, 15, -44, -128, -128, -128, -128, -128,
    -128, -128, -22, 73, 123, 127, 127, 111, 87, 106, 116, 125, 127, 127, 127, 127, 127, 97, 73,
    37, 3, -75, -128, -128, -128, -128, -128, -128, -102, 21, 101, 127, 127, 127, 116, 72, 97, 92,
    90, 115, 127, 114, 110, 107, 88, 67, 39, 21, -43, -128, -128, -128, -128, -128, -128, -128,
    -16, 71, 114, 127, 127, 123, 73, 74, 96, 77, 94, 115, 127, 99, 100, 95, 85, 50, 51, 28, -32,
    -116, -128, -128, -128, -128, -128, -128, -31, 65, 107, 127, 127, 127, 75, 73, 89, 77, 86, 101,
    124, 110, 100, 107, 106, 63, 73, 60, 20, -46, -128, -128, -128, -128, -128, -128, -123, 1, 71,
    118, 127, 127, 107, 70, 75, 64, 43, 65, 90, 90, 103, 114, 120, 100, 96, 91, 70, 16, -31, -128,
    -128, -128, -128, -128, -128, -125, -12, 65, 113, 127, 127, 119, 73, 66, 60, 57, 65, 90, 101,
    114, 106, 95, 97, 78, 82, 76, 38, -7, -98, -128, -128, -128, -128, -128, -128, -48, 30, 116,
    127, 127, 127, 90, 56, 83, 35, 62, 74, 78, 97, 91, 80, 68, 84, 99, 98, 70, -1, -50, -128, -128,
    -128, -128, -128, -128, 37, 23, 127, 127, 60, 91, -13, 35, -3, 24, 76, 54, 127, 94, 105, 109,
    71, 106, 90, 119, 92, 73, 4, -69, -128, -128, -128, -128, -128, -128, 38, 34, 127, 86, 69, 50,
    -9, 60, -19, 68, 18, 66, 90, 92, 123, 81, 116, 76, 121, 115, 113, 114, 31, -11, -128, -128,
    -128, -128, -128, -128, -26, 48, 104, 127, 54, 106, -16, 47, -1, 22, 50, 24, 90, 64, 117, 73,
    91, 73, 83, 104, 115, 113, 89, 47, -28, -128, -128, -128, -128, -128, -128, -19, 51, 127, 127,
    94, 66, -10, 13, -22, 27, 40, 72, 113, 114, 125, 84, 79, 57, 66, 83, 110, 121, 105, 68, -19,
    -128, -128, -128, -128, -128, -128, -61, 35, 127, 127, 115, 92, -21, -9, -62, -20, 6, 46, 121,
    127, 127, 122, 105, 60, 42, 44, 56, 98, 98, 94, 32, -60, -128, -128, -128, -128, -128, -128,
    -30, 41, 127, 127, 127, 86, -3, -3, -77, -25, -37, 42, 92, 127, 127, 127, 127, 68, 53, 18, 35,
    37, 53, 60, 10, -21, -127, -128, -128, -128, -128, -128, -70, 0, 95, 127, 117, 127, 22, 14,
    -34, -50, -9, -9, 69, 82, 114, 110, 88, 84, 40, 47, 24, 40, 47, 33, 44, 7, -7, -46, -90, -128,
    -128, -128, -128, -128, -118, -49, -14, 47, 54, 57, 55, 38, 45, 37, 46, 50, 61, 73, 64, 61, 50,
    36, 33, 19, 20, 22, 27, 38, 33, 25, 6, -9, -28, -49, -64, -84, -95, -107, -109, -100, -87, -67,
    -43, -20, 4, 23, 34, 47, 52, 56, 58, 59, 53, 50, 47, 40, 38, 33, 31, 28, 24, 21, 15, 11, 7, 1,
    0, -8, -13, -22, -34, -43, -54, -62, -67, -71, -70, -64, -56, -42, -28, -14, 2, 15, 25, 34, 40,
    44, 46, 46, 45, 42, 37, 33, 28, 24, 20, 15, 12, 8, 7, 5, 4, 3, 1, -2, -4, -9, -12, -16, -19,
    -22, -23, -24, -24, -23, -23, -23, -23, -22, -21, -20, -18, -15, -13, -9, -7, -3, 0, 2, 5, 7,
    9, 11, 13, 15, 16, 18, 20, 21, 23, 21, 20, 18, 16, 15, 13, 12, 11, 8, 5, 3, 1, -1, -3, -4, -6,
    -6, -5, -5, -5, -5, -6, -5, -7, -5, -4, -7, -6, -1, -4, 1, -5, 11, 7, -3, 12, -5, 8, 10, 12,
    12, 15, 12, 11, 18, 14, 10, 10, 8, 15, 16, 11, 12, 3, 0, 1, 9, 3, 11, 3, 5, 3, 2, 6, 11, 17,
    -24, 0, -4, -10, -6, -11, 3, 10, 13, 11, 1, -11, 15, -2, -6, -3, 1, -3, 19, 34, 15, 20, 14, 4,
    0, 12, 28, 14, 30, 23, -8, 18, 6, 6, 8, 17, -7, 1, -7, -16, -20, -28, -12, -36, -13, -20, -14,
    -12, -16, -25, -23, -29, -30, -25, -26, -14, -22, -6, -13, -15, -7, -6, -20, -10, -12, -28, -8,
    -20, -2, -5, -3, -1, -6, -2, -5, -1, -1, 3, 1, -2, -1, 12, -12, 15, -8, 3, 8, -12, 15, -11, -3,
    -6, -3, -9, -9, -6, -4, -8, -4, -10, 1, -3, -8, 8, -4, 4, 1, 6, 1, -2, 9, -12, 2, -1, 3, 1, 5,
    2, 0, 14, -8, 22, -8, 20, 1, 4, 15, 2, 16, 1, 15, 11, 1, 9, 1, -6, 19, -5, 23, -1, -1, 9, -3,
    12, -1, 13, 3, 10, 6, 1, 21, -15, 26, -7, 7, 17, -8, 27, -4, 20, 2, 14, 6, 11, 15, 2, 16, -4,
    19, -6, 2, 7, -10, 16, -5, 12, -9, 12, -10, 12, 4, -3, 16, -9, 21, -6, 10, -4, 3, 2, 2, 11, 10,
    4, 18, -3, 19, 2, 4, 11, -12, 10, -1, 9, 10, 19, 7, 12, 12, 14, 10, 14, 4, 11, 12, 1, 14, 5, 7,
    13, 7, 14, 10, 4, 1, 0, 8, -6, -1, -4, 0, 10, -6, -1, -24, -20, -29, -49, -36, -44, -23, -37,
    -9, -10, 15, 18, 32, 51, 44, 51, 67, 67, 76, 72, 69, 74, 17, 42, -46, -44, -100, -119, -128,
    -128, -128, -128, -104, -83, 22, 21, 85, 67, 61, 31, -9, -15, -4, 41, 93, 127, 127, 127, 127,
    113, 79, 61, 18, 22, -18, -39, -98, -122, -128, -128, -128, -128, -128, -67, 70, 29, 127, 50,
    49, -5, -57, -43, -34, 18, 58, 104, 127, 127, 127, 96, 117, 66, 54, 56, 16, 52, -9, -18, -110,
    -119, -128, -128, -128, -128, -128, 44, 124, 82, 127, -2, 93, -108, -100, -85, -85, 21, 81,
    125, 127, 127, 127, 126, 12, 88, 7, 60, 75, 38, 64, -26, -106, -128, -128, -128, -128, -128,
    -111, 12, 127, 66, 127, 36, -94, -81, -128, -108, -40, 8, 127, 127, 127, 127, 76, 64, 12, -7,
    95, 96, 127, 127, 79, 16, -63, -128, -128, -128, -128, -128, -52, -61, 93, 127, 82, 123, 24,
    -128, -128, -128, -128, 21, 127, 127, 127, 127, 98, 52, 1, 13, 27, 80, 127, 127, 127, 103, 51,
    -34, -83, -128, -128, -128, -128, -128, -128, 33, 29, 127, 127, 93, -64, -57, -128, -128, -59,
    46, 41, 104, 127, 127, 44, 74, 68, 18, 50, 127, 115, 93, 127, 127, 41, 27, 13, -68, -127, -128,
    -128, -128, -128, -128, -71, 43, 83, 127, 127, 81, -64, -85, -83, -117, -98, 18, 83, 75, 85,
    116, 82, 23, 23, 57, 70, 75, 122, 127, 107, 88, 83, 62, 4, -21, -39, -103, -128, -128, -128,
    -128, -128, -128, 19, 68, 87, 127, 121, 9, -70, -73, -71, -88, -56, 18, 78, 73, 76, 81, 88, 58,
    47, 75, 112, 112, 103, 107, 104, 78, 52, 42, 39, 6, -26, -66, -128, -128, -128, -128, -128,
    -128, -42, 80, 92, 114, 126, 47, -62, -111, -91, -65, -49, -17, 57, 105, 103, 65, 68, 82, 62,
    42, 80, 127, 127, 111, 93, 88, 75, 74, 66, 60, 18, -34, -86, -128, -128, -128, -128, -128,
    -128, -32, 127, 127, 87, 72, 16, -117, -128, -92, 15, 46, 27, 49, 87, 41, -52, -20, 87, 115,
    85, 127, 127, 127, 72, 81, 127, 102, 81, 114, 99, 6, -68, -89, -107, -128, -128, -128, -128,
    -128, -128, -21, 127, 127, 40, -22, -76, -128, -128, -32, 127, 127, 49, 10, 1, -61, -90, 27,
    127, 127, 127, 127, 122, 88, 55, 122, 127, 127, 87, 54, 43, -21, -96, -101, -81, -128, -128,
    -128, -128, -128, -128, 85, 127, 127, -52, -128, -128, -128, -128, 127, 127, 127, -63, -123,
    -104, -95, 11, 127, 127, 127, 7, -19, 32, 79, 127, 127, 127, 92, 38, 72, 71, 3, -39, -73, -95,
    -128, -128, -128, -128, -128, -128, 76, 127, 127, -111, -128, -128, -128, -50, 127, 127, 76,
    -128, -128, -100, 20, 127, 127, 127, -29, -128, -23, 127, 127, 127, 127, 68, -1, 58, 127, 115,
    71, 7, -74, -128, -128, -128, -128, -128, -128, -128, -128, 74, 127, 127, -128, -128, -128,
    -128, 25, 127, 127, -113, -128, -128, 0, 88, 127, 127, 44, -128, -86, 106, 127, 127, 127, 96,
    -32, 44, 127, 127, 127, 80, -13, -31, -25, -78, -115, -89, -128, -128, -128, -128, -128, -128,
    127, 127, -63, -128, -128, -128, -19, 127, 127, -64, -128, -128, -23, 73, 127, 127, 0, -128,
    -54, 127, 127, 127, 127, 63, -21, 105, 127, 127, 107, 113, 46, 15, 53, 17, -80, -128, -128,
    -128, -128, -128, -128, -128, -128, -15, 127, 127, -128, -128, -128, -81, 127, 127, 124, -128,
    -128, -61, 12, 127, 127, 84, -128, -89, 78, 127, 127, 127, 66, 0, 115, 127, 127, 127, 127, 72,
    60, 82, 58, 36, -17, -109, -128, -124, -128, -128, -128, -128, -128, -128, -65, 127, 127, -128,
    -128, -96, -45, 127, 127, 51, -128, -128, 46, 96, 127, 127, -20, -128, 12, 113, 113, 127, 127,
    13, 33, 127, 127, 118, 127, 127, 58, 72, 91, 51, 29, 13, -45, -109, -128, -128, -128, -128,
    -128, -128, -128, -128, -128, 127, 127, -128, -128, -72, -30, 127, 127, 28, -128, -128, 93,
    116, 127, 127, -45, -128, 94, 127, 56, 78, 97, 24, 92, 127, 127, 61, 116, 127, 114, 97, 92, 62,
    42, 44, 3, -61, -106, -128, -128, -128, -128, -128, -128, -128, -128, -128, 127, 127, -101,
    -128, -64, -8, 60, 127, 79, -128, -127, 127, 127, 102, 121, -9, -87, 101, 127, 56, 10, 53, 25,
    77, 127, 127, 47, 96, 127, 102, 99, 101, 51, 61, 77, 37, -23, -64, -92, -126, -128, -128, -128,
    -128, -128, -128, -128, -128, -128, 127, 127, -128, -128, -28, 11, 97, 127, 23, -128, -65, 127,
    124, 107, 103, -53, -32, 127, 127, -2, -4, 42, 30, 127, 127, 94, 18, 109, 127, 127, 108, 75,
    47, 55, 68, 46, -4, -38, -60, -70, -92, -128, -128, -128, -128, -128, -128, -128, -128, -128,
    -27, 127, 79, -128, -128, -2, 60, 127, 127, -128, -128, 51, 127, 127, 86, -29, -83, 70, 127,
    109, 0, -19, 4, 82, 127, 118, 35, 44, 114, 127, 121, 76, 58, 71, 75, 61, 28, -8, -20, -14, -29,
    -64, -107, -128, -128, -113, -108, -128, -128, -128, -128, -128, -128, 24, 127, 7, -128, -124,
    23, 82, 127, 78, -128, -128, 78, 127, 81, 39, -37, -27, 123, 127, 37, -29, -6, 16, 77, 108, 37,
    -6, 70, 114, 105, 98, 74, 72, 102, 105, 66, 30, 15, 0, 9, 3, -40, -70, -74, -89, -112, -120,
    -113, -119, -113, -100, -128, -128, -128, -105, 67, 124, -71, -128, -34, 83, 105, 99, -19,
    -128, -30, 127, 95, -1, -8, -16, 35, 127, 82, -41, -20, 61, 76, 60, 19, -42, 7, 127, 119, 42,
    62, 99, 96, 116, 96, 46, 57, 72, 26, -11, 7, -2, -21, -35, -72, -87, -58, -48, -74, -97, -101,
    -86, -72, -99, -128, -128, -128, -123, -99, 11, 82, -44, -128, -27, 82, 77, 57, 1, -66, -9, 94,
    57, -25, -9, 36, 63, 65, 13, -28, 13, 72, 68, 25, 1, 19, 63, 95, 80, 63, 52, 62, 99, 89, 55,
    52, 54, 35, 25, 31, 24, 13, 2, -12, -20, -14, -21, -36, -50, -65, -68, -70, -85, -90, -90, -96,
    -82, -79, -112, -128, -98, -70, -51, 40, 45, -52, -48, 38, 61, 54, 33, -23, -11, 56, 35, -24,
    -13, 19, 30, 44, 19, -13, 11, 50, 54, 38, 19, 21, 52, 58, 33, 22, 28, 41, 75, 69, 22, 24, 61,
    69, 68, 53, 24, 31, 10, -19, 1, 1, -12, -11, -31, -29, 1, 5, -16, -26, -33, -46, -48, -49, -56,
    -65, -77, -75, -72, -87, -85, -66, -62, -69, -74, -81, -39, 16, 1, -22, -16, 3, 19, 16, 1, 5,
    10, 7, 8, -1, 6, 20, 13, 15, 34, 34, 31, 54, 61, 50, 58, 70, 64, 59, 69, 56, 47, 71, 70, 29,
    21, 35, 31, 18, -4, -2, 4, -4, -14, -23, -23, -24, -26, -27, -32, -35, -24, -22, -34, -33, -31,
    -36, -35, -30, -35, -32, -27, -32, -30, -28, -24, -23, -21, -15, -20, -21, -10, -13, -19, -4,
    3, 2, -1, -4, 1, 6, 6, 3, 11, 14, 15, 19, 10, 11, 25, 21, 8, 16, 18, 17, 22, 17, 16, 20, 26,
    18, 10, 25, 27, 13, 21, 24, 11, 18, 25, 10, 11, 25, 14, -1, 8, 9, -2, -1, 2, 3, -5, -6, -2, -6,
    -3, 0, -12, -11, -1, -4, -10, -16, -7, -2, -10, -12, -8, -6, -3, -4, -9, -7, -9, -4, -1, -13,
    -9, -5, -14, -6, -4, -14, -4, -2, -12, -5, -12, -11, -4, -12, -10, -10, -11, -3, -8, -13, -4,
    -1, 2, -11, -8, -1, -8, -8, -4, -2, 0, 0, -4, 0, -3, 8, 6, -7, 7, 6, -3, 1, 7, 5, 2, 4, 2, 0,
    12, 8, -2, 9, 5, 1, 4, -1, 2, 5, 7, -3, -6, 10, 4, -4, 10, -3, -4, 12, -6, -7, 1, -2, -4, -5,
    -3, -4, -5, 5, -4, -10, 2, 0, 2, -3, -8, 0, -2, -3, -2, -2, 0, -2, -2, -2, -2, 2, -2, -3, 3, 1,
    -1, -2, 4, 5, 0, -4, -2, 5, 3, -3, -2, 4, 3, -2, -3, 5, 6, 3, 1, 2, 3, 3, 3, 1, 1, 2, 2, 3, 1,
    -1, 5, 8, 0, -1, 9, 2, -3, 5, -2, 1, 7, -9, -2, 8, -7, -2, 5, -2, 0, -1, -2, 2, 1, -1, -1, 2,
    1, -4, 0, 2, 0, 0, -4, -3, 1, -2, -5, -3, -1, -2, -5, -5, -2, -1, -3, -5, -3, 0, -2, -4, -2,
    -1, -4, -2, -1, -3, -1, -2, -3, 0, -2, -1, 2, 0, -1, 1, 0, 2, 1, -1, 1, 2, 0, 1, 0, 1, 1, 1, 1,
    1, 2, 3, 3, 2, 3, 3, 2, 1, 2, 3, 3, 1, 1, 3, 1, 1, 2, 2, -1, -2, 1, 1, -1, -1, -2, -1, 0, -2,
    -1, 1, -2, -2, 0, -2, -1, -1, -3, 0, -1, -2, 0, -2, -3, 0, -2, -3, -1, -3, -3, -2, -3, -2, -2,
    -2, -1, -2, -2, -2, -2, -2, -3, -3, -2, -3, -3, -1, -2, -2, -2, -3, -2, -3, -3, -2, -1, -2, -2,
    -2, -1, -1, -2, -2, -1, -1, -1, -1, -1, -1, -2, -2, -1, -1, -2, -2, -1, -1, -1, -2, -1, 1, 1,
    0, 0, 1, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 1, 1, 2, 2, 1, 1, 2, 2, 2, 1, 1, 2, 3, 2, 0, 1, 3, 2, 1,
    1, 1, 3, 2, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, -1, 0, 0, 0, 0, -1, -1, 0,
    0, -1, -1, -1, -1, -2, -2, -1, -1, -2, -2, -2, -1, -1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
    -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, -1, -2, -2, -1, -2, -1, -1, -2, -2,
    -1, -2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
    -2, -2, -2, -2, -2, -2, -1, -2, -2, -1, -1, -2, -2, -2, -2, -1, -2, -2, -2, -2, -2, -2, -2, -2,
    -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -2,
    -2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -2, -1, -1, -2, -1, -1, -1, -1, -1, -1, -1, -1,
    -1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, -1, -1, -1, -1, 0, -1, -1, -1,
    0, 0, 0, -1, -1, 0, -1, -1, -1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    -1, -1, -1, -1, -1, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1,
    -1, -1, -1, 0, 0, 0, -1, -1, 0, -1, -1, -1, -1, 0, -1, -1, -1, 0, 0, -1, -1, 0, 0, 0, -1, -1,
    -1, -1, -1, -1, -1, -1, 0, -1, -1, 0, -1, 0, 0, -1, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, 0, 0,
    0, 0, -1, 0, 0, 0, 0, -1, 0, -1, 0, -1,
];
